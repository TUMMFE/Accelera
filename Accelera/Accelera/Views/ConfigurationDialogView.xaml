<Window x:Class="Accelera.Views.ConfigurationDialogView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Accelera.Views"
        xmlns:viewModels="clr-namespace:Accelera.ViewModels"
        xmlns:xc="clr-namespace:Accelera.Models"
        xmlns:oxy="http://oxyplot.org/wpf"
        xc:DialogCloser.DialogResult="{Binding DialogResult}"
        mc:Ignorable="d"
        Title="Configuration of Device and Experiment" Height="800" Width="800" WindowStartupLocation="CenterScreen" Icon="/Accelera;component/Images/Setup_256.png" ResizeMode="NoResize">
    <Window.Resources>
        <xc:EnumBooleanConverter x:Key="EnumBooleanConverter"/>
    </Window.Resources>
    <Window.DataContext>
        <viewModels:ConfigurationDialogViewModel/>
    </Window.DataContext>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition x:Name="ControlRow" Height="Auto"/>
            <RowDefinition x:Name="ExtiDesignRow" Height="Auto"/>
            <RowDefinition x:Name="AcousticDesignRow" Height="Auto"/>
            <RowDefinition x:Name="OffsetRow" Height="Auto"/>
            <RowDefinition x:Name="PlotRow" />
            <RowDefinition x:Name="DialogControl" Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <GroupBox Margin="5,5,5,5" Padding="5">
                <GroupBox.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Images/HW_64.png" Height="32" Width="32" SnapsToDevicePixels="True" RenderOptions.BitmapScalingMode="HighQuality" Margin="3,0" VerticalAlignment="Center"/>
                        <TextBlock FontWeight="Bold" VerticalAlignment="Center">Device Hardware Configuration</TextBlock>
                    </StackPanel>
                </GroupBox.Header>
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label >Range:</Label>
                        <ComboBox ItemsSource="{Binding Ranges}" SelectedIndex="{Binding SelectedRangeIdx}" TabIndex="1" Width="100"/>
                        <Label Margin="20,0,0,0" >Output Data Rate:</Label>
                        <ComboBox ItemsSource="{Binding OutputDataRates}" SelectedIndex="{Binding SelectedOutputDataRateIdx}" TabIndex="2" Width="100"/>
                        <Label Margin="20,0,0,0" >High Pass Filter (3 dB):</Label>
                        <ComboBox ItemsSource="{Binding HighPassFilters}" SelectedIndex="{Binding SelectedHighPassFilterIdx}" TabIndex="3" Width="220"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <Label VerticalAlignment="Center" >Beep Duration (ms):</Label>
                        <TextBox VerticalAlignment="Center" Width="50" TabIndex="5" Text="{Binding BeepDuration, UpdateSourceTrigger=PropertyChanged}"/>
                        <CheckBox Content="Activity Counting Enabled" Margin="20,0,0,0" IsChecked="{Binding IsActivityCountingSelected}" TabIndex="4" VerticalAlignment="Center"/>
                        <Label Margin="20,0,0,5" VerticalAlignment="Center" >Activity Count Number: </Label>
                        <TextBox VerticalAlignment="Center" Width="50" Text="{Binding ActivityCountNumber, UpdateSourceTrigger=PropertyChanged}" TabIndex="6"/>
                        <Label Margin="20,0,0,0" VerticalAlignment="Center" >Activity Threshold:</Label>
                        <TextBox VerticalAlignment="Center" Width="50" Text="{Binding ActivityThreshold, UpdateSourceTrigger=PropertyChanged}" TabIndex="7"/>
                        
                    </StackPanel>
                </StackPanel>
            </GroupBox>
        </Grid>
        <Grid Grid.Row="1">
            <GroupBox Margin="5,5,5,5" Padding="5">
                <GroupBox.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Images/RunExt_64.png" Height="32" Width="32" SnapsToDevicePixels="True" RenderOptions.BitmapScalingMode="HighQuality" Margin="3,0" VerticalAlignment="Center"/>
                        <TextBlock FontWeight="Bold" VerticalAlignment="Center">External Trigger Configuration</TextBlock>
                    </StackPanel>
                </GroupBox.Header>
                <StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <Label VerticalAlignment="Center" >Number of samples / trigger event:</Label>
                        <TextBox VerticalAlignment="Center" Width="50" TabIndex="8" Text="{Binding SampleNumberExternalTrigger, UpdateSourceTrigger=PropertyChanged}"/>
                        <CheckBox Content="Beep on external trigger" Margin="20,0,0,0" IsChecked="{Binding IsBeepOnTriggerSelected}" VerticalAlignment="Center" TabIndex="8"/>
                        <Label VerticalAlignment="Center" Margin="20,0,0,0" >External Trigger:</Label>
                        <ComboBox ItemsSource="{Binding TriggerTypes}" SelectedIndex="{Binding SelectedTriggerTypeIdx}" Width="220" VerticalAlignment="Center" TabIndex="10"/>
                    </StackPanel>
                </StackPanel>
            </GroupBox>
        </Grid>
        <Grid Grid.Row="2">
            <GroupBox Margin="5,5,5,5" Padding="5">
                <GroupBox.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Images/RunAcc_64.png" Height="32" Width="32" SnapsToDevicePixels="True" RenderOptions.BitmapScalingMode="HighQuality" Margin="3,0" VerticalAlignment="Center"/>
                        <TextBlock FontWeight="Bold" VerticalAlignment="Center">Acoustic Stimulation Configuration</TextBlock>
                    </StackPanel>
                </GroupBox.Header>
                <StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <Label VerticalAlignment="Center" >Number of samples / stimulus:</Label>
                        <TextBox VerticalAlignment="Center" Width="50" TabIndex="11" Text="{Binding SampleNumberAcousticStimulation, UpdateSourceTrigger=PropertyChanged}"/>
                        <Label VerticalAlignment="Center" Margin="20,0,0,0">Block duration (s):</Label>
                        <TextBox VerticalAlignment="Center" Width="50" TabIndex="12" Text="{Binding BlockDuration, UpdateSourceTrigger=PropertyChanged}"/>
                        <Label VerticalAlignment="Center" Margin="20,0,0,0">Stimulus rate (mHz):</Label>
                        <TextBox VerticalAlignment="Center" Width="50" TabIndex="13" Text="{Binding StimulusRate, UpdateSourceTrigger=PropertyChanged}"/>

                    </StackPanel>
                </StackPanel>
            </GroupBox>

        </Grid>
        <Grid Grid.Row="3">
            <GroupBox Margin="5,5,5,5" Padding="5">
                <GroupBox.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Images/OffsetB_64.png" Height="32" Width="32" SnapsToDevicePixels="True" RenderOptions.BitmapScalingMode="HighQuality" Margin="3,0" VerticalAlignment="Center"/>
                        <TextBlock FontWeight="Bold" VerticalAlignment="Center">Automatic Offset Calibration (X-, Y- and Z-direction)</TextBlock>
                    </StackPanel>
                </GroupBox.Header>
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label VerticalAlignment="Center" >X:</Label>
                        <TextBox VerticalAlignment="Center" Width="50" TabIndex="14" Text="{Binding XOffset, UpdateSourceTrigger=PropertyChanged}"/>
                        <Label Margin="50,0,0,0" VerticalAlignment="Center">Y:</Label>
                        <TextBox VerticalAlignment="Center" Width="50"  TabIndex="15" Text="{Binding YOffset, UpdateSourceTrigger=PropertyChanged}"/>
                        <Label Margin="50,0,0,0" VerticalAlignment="Center" >Z:</Label>
                        <TextBox VerticalAlignment="Center" Width="50"  TabIndex="16" Text="{Binding ZOffset, UpdateSourceTrigger=PropertyChanged}"/>
                        <Label Margin="10,0,0,0" VerticalAlignment="Center" >Do not move during offset calibration!</Label>
                        <Button HorizontalAlignment="Left" Command="{Binding StartOffsetCalibrationClicked, Mode=OneWay}" IsEnabled="{Binding StartOffsetCalibrationClicked, Mode=OneWay}" Width="50" Height="50" Margin="100,0,0,0"  TabIndex="17">
                            <Button.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="10"/>
                                </Style>
                            </Button.Resources>
                            <Button.ToolTip>
                                <StackPanel>
                                    <TextBlock FontWeight="Bold" FontSize="14" Margin="0,0,0,5">Start Data Aquisition</TextBlock>
                                    <TextBlock>
                                        Start data aquisition for offset calibration. <LineBreak />                                    
                                        Data will be shown in the plot panels below. <LineBreak />
                                        The sensor should be not moved during offset <LineBreak />
                                        calibration. Stop data aquisition after a few seconds.
                                    </TextBlock>
                                    <Border BorderBrush="Silver" BorderThickness="0,1,0,0" Margin="0,8" />
                                    <WrapPanel>
                                        <Image Source="/Images/Help_256.png" Margin="0,0,5,0" />
                                        <TextBlock FontStyle="Italic">
                                            <LineBreak />
                                            If there's something strange ...<LineBreak />
                                            <LineBreak />
                                            Who you gonna call?</TextBlock>
                                    </WrapPanel>
                                </StackPanel>
                            </Button.ToolTip>
                            <Image Source="/Images/Offset_StartB_256.png" VerticalAlignment="Center" HorizontalAlignment="Center" SnapsToDevicePixels="True" RenderOptions.BitmapScalingMode="HighQuality" Margin="6,0,0,0">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" Value="0.5" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </Button>
                        <Button HorizontalAlignment="Left" Command="{Binding StopOffsetCalibrationClicked, Mode=OneWay}" IsEnabled="{Binding StopOffsetCalibrationClicked, Mode=OneWay}" Width="50" Height="50" Margin="20,0,0,0"  TabIndex="18">
                            <Button.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="10"/>
                                </Style>
                            </Button.Resources>
                            <Button.ToolTip>
                                <StackPanel>
                                    <TextBlock FontWeight="Bold" FontSize="14" Margin="0,0,0,5">Stop Data Aquisition</TextBlock>
                                    <TextBlock>
                                        Stop data aquisition for offset calibration. <LineBreak />                                    
                                        After stop data will be analyzed and the mean <LineBreak />
                                        value will be calculated. This value can be written <LineBreak />
                                        to the sensor.
                                    </TextBlock>
                                    <Border BorderBrush="Silver" BorderThickness="0,1,0,0" Margin="0,8" />
                                    <WrapPanel>
                                        <Image Source="/Images/Help_256.png" Margin="0,0,5,0" />
                                        <TextBlock FontStyle="Italic">
                                            <LineBreak />
                                            If there's something strange ...<LineBreak />
                                            <LineBreak />
                                            Who you gonna call?</TextBlock>
                                    </WrapPanel>
                                </StackPanel>
                            </Button.ToolTip>
                            <Image Source="/Images/Stop_256.png" VerticalAlignment="Center" HorizontalAlignment="Center" SnapsToDevicePixels="True" RenderOptions.BitmapScalingMode="HighQuality">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" Value="0.5" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </Button>
                    </StackPanel>
                </StackPanel>
            </GroupBox>
        </Grid>
        <Grid Grid.Row="4">
            <Grid Margin="0,0,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <oxy:PlotView x:Name="xOffset" Model="{Binding xOffsetModel}" Grid.Column="0"/>
                <oxy:PlotView x:Name="yOffset" Model="{Binding yOffsetModel}" Grid.Column="1"/>
                <oxy:PlotView x:Name="zOffset" Model="{Binding zOffsetModel}" Grid.Column="2"/>
            </Grid>
        </Grid>
        <Grid Grid.Row="5">
            <StackPanel Orientation="Horizontal" Margin="5,5,5,5">
                <Button HorizontalAlignment="Left" Command="{Binding WriteToHardwareClicked, Mode=OneWay}" IsEnabled="{Binding WriteToHardwareClicked, Mode=OneWay}" Width="50" TabIndex="19" VerticalAlignment="Center">
                    <Button.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="10"/>
                        </Style>
                    </Button.Resources>
                    <Button.ToolTip>
                        <StackPanel>
                            <TextBlock FontWeight="Bold" FontSize="14" Margin="0,0,0,5">Send To Device</TextBlock>
                            <TextBlock>
                                    Send the configuration data to the device. <LineBreak />                                    
                                    The data will be written on the device and the <LineBreak />
                                    the configuration value will be stored on <LineBreak />
                                    the hard disk as the new standard setting.                                    
                            </TextBlock>
                            <Border BorderBrush="Silver" BorderThickness="0,1,0,0" Margin="0,8" />
                            <WrapPanel>
                                <Image Source="/Images/Help_256.png" Margin="0,0,5,0" />
                                <TextBlock FontStyle="Italic">
                                        <LineBreak />
                                        If there's something strange ...<LineBreak />
                                        <LineBreak />
                                        Who you gonna call?</TextBlock>
                            </WrapPanel>
                        </StackPanel>
                    </Button.ToolTip>
                    <Image Source="/Images/Send_HW_256.png" VerticalAlignment="Center" HorizontalAlignment="Center" SnapsToDevicePixels="True" RenderOptions.BitmapScalingMode="HighQuality">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0.5" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Button>
                <Button HorizontalAlignment="Left" IsCancel="True" Command="{Binding CancelButtonClicked, Mode=OneWay}" IsEnabled="{Binding CancelButtonClicked, Mode=OneWay}" Width="50" TabIndex="20" Margin="20,0,0,0" VerticalAlignment="Center">
                    <Button.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="10"/>
                        </Style>
                    </Button.Resources>
                    <Button.ToolTip>
                        <StackPanel>
                            <TextBlock FontWeight="Bold" FontSize="14" Margin="0,0,0,5">Cancel</TextBlock>
                            <TextBlock>
                                    Cancel the configuration. Thus, no <LineBreak />                                    
                                    data will be written to the device. <LineBreak />
                                    The dialog will be closed and you  <LineBreak />
                                    can try it again later.
                            </TextBlock>
                            <Border BorderBrush="Silver" BorderThickness="0,1,0,0" Margin="0,8" />
                            <WrapPanel>
                                <Image Source="/Images/Help_256.png" Margin="0,0,5,0" />
                                <TextBlock FontStyle="Italic">
                                        <LineBreak />
                                        If there's something strange ...<LineBreak />
                                        <LineBreak />
                                        Who you gonna call?</TextBlock>
                            </WrapPanel>
                        </StackPanel>
                    </Button.ToolTip>
                    <Image Source="/Images/Cancel_256.png" VerticalAlignment="Center" HorizontalAlignment="Center" SnapsToDevicePixels="True" RenderOptions.BitmapScalingMode="HighQuality">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0.5" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Button>
                <ProgressBar Value="{Binding CurrentProgress}" Minimum="{Binding ProgressBarMin}" Maximum="{Binding ProgressBarMax}" Margin="20,0,0,0" Width="630" BorderThickness="2,2,2,2" Foreground="#FF2B8A80" BorderBrush="#FF641478" />
            </StackPanel>
        </Grid>
    </Grid>
</Window>
